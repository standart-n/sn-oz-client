// Generated by CoffeeScript 1.6.2
$(function() {
  var methods;

  methods = {
    init: function(options) {
      var sn;

      if (options == null) {
        options = {};
      }
      sn = {
        levels: {},
        users: {},
        content: {},
        result: {},
        console: false
      };
      $.extend(true, sn, options);
      $(this).data('sn', sn);
      if (typeof console !== "undefined" && console !== null) {
        console.log('configuration...');
      }
      $(this).snConf();
      if (typeof console !== "undefined" && console !== null) {
        console.log('layout...');
      }
      $(this).snLayout();
      if (typeof console !== "undefined" && console !== null) {
        console.log('autoload...');
      }
      return $(this).snEvents('#autoload');
    }
  };
  return $.fn.sn = function(sn) {
    if (sn == null) {
      sn = {};
    }
    if (methods[sn]) {
      return methods[sn].apply(this, Array.prototype.slice.call(arguments, 1));
    } else {
      return methods.init.apply(this, arguments);
    }
  };
});

$(function() {
  var methods;

  methods = {
    init: function(options) {
      if (options == null) {
        options = {};
      }
      $(this).snConf('main');
      $(this).snConf('theme');
      $(this).snConf('css');
      $(this).snConf('js');
      return $(this).snConf('settings');
    },
    main: function() {
      var sn;

      sn = $(this).data('sn');
      if (typeof console !== "undefined" && console !== null) {
        console.log('conf: ' + 'main.json');
      }
      return $.ajax({
        url: 'conf/main.json',
        async: false,
        dataType: 'json',
        success: function(s) {
          $.extend(sn, s);
          return $(this).data('sn', sn);
        }
      });
    },
    theme: function() {
      var sn;

      sn = $(this).data('sn');
      if (typeof console !== "undefined" && console !== null) {
        console.log('conf: ' + 'themes.json');
      }
      return $.ajax({
        url: 'conf/themes.json',
        async: false,
        dataType: 'json',
        success: function(s) {
          if (s[sn.theme.name]) {
            $.extend(sn.theme, s[sn.theme.name]);
            sn.theme.enable = true;
          } else {
            sn.theme.enable = false;
          }
          return $(this).data('sn', sn);
        }
      });
    },
    css: function() {
      var sn;

      sn = $(this).data('sn');
      if (typeof console !== "undefined" && console !== null) {
        console.log('conf: ' + 'css');
      }
      if (sn.theme.css) {
        return $.each(sn.theme.css, function(i) {
          var head, link;

          head = document.getElementsByTagName('head')[0];
          link = document.createElement('link');
          link.rel = 'stylesheet';
          link.type = 'text/css';
          link.href = this;
          return head.appendChild(link);
        });
      }
    },
    js: function() {
      var sn;

      sn = $(this).data('sn');
      if (typeof console !== "undefined" && console !== null) {
        console.log('conf: ' + 'js');
      }
      if (sn.theme.js) {
        return $.each(sn.theme.js, function(i) {
          return $.getScript(this);
        });
      }
    },
    settings: function() {}
  };
  return $.fn.snConf = function(sn) {
    if (sn == null) {
      sn = {};
    }
    if (methods[sn]) {
      return methods[sn].apply(this, Array.prototype.slice.call(arguments, 1));
    } else {
      return methods.init.apply(this, arguments);
    }
  };
});

$(function() {
  var methods;

  methods = {
    init: function(options) {
      if (options == null) {
        options = {};
      }
      if (typeof console !== "undefined" && console !== null) {
        return conlole.log('design');
      }
    }
  };
  $.fn.snDesign = function(sn) {
    if (sn == null) {
      sn = {};
    }
    if (methods[sn]) {
      return methods[sn].apply(this, Array.prototype.slice.call(arguments, 1));
    } else {
      return methods.init.apply(this, arguments);
    }
  };
  return $(function() {
    methods = {
      init: function(options) {
        var def, sn;

        if (options == null) {
          options = {};
        }
        def = {
          href: 'none'
        };
        if (typeof sn !== 'object') {
          def.href = options;
        } else {
          $.extend(true, def, options);
        }
        if (def.href !== '#' && def.href.match(/#(.*)/)) {
          if (def.href === '#main/text/contacts') {
            $.cookie('contacts', def.href, {
              expires: 7
            });
          }
          sn = $(this).data('sn');
          sn.href = def.href + '/:';
          sn.levels = {
            one: sn.href.replace(/(.*)#(.*?)\/(.*)/, '$2'),
            two: sn.href.replace(/(.*)#(.*?)\/(.*?)\/(.*)/, '$3'),
            three: sn.href.replace(/(.*)#(.*?)\/(.*?)\/(.*?)\/(.*)/, '$4'),
            anchor: sn.href.replace(/(.*)\:(.*?)\/(.*)/, '$2')
          };
          if (typeof console !== "undefined" && console !== null) {
            console.info('url: ' + sn.href);
          }
          if (typeof console !== "undefined" && console !== null) {
            console.info('levels: ', sn.levels);
          }
          if ((sn.levels.one != null) && sn.levels.one !== 'spoiler') {
            switch (sn.levels.one) {
              case 'autoload':
                $(this).snModels('primary', {
                  file: 'main.html'
                });
                $(this).snModels('side', {
                  file: 'main.html'
                });
                $(this).snTriggers('switch', 'side', 'main');
                $(this).snTriggers('links', 'bar');
                $(this).snTriggers('links', 'side');
                $(this).snTriggers('links', 'primary');
                $(this).snTriggers('hover', 'bar');
                this.snTriggers('hover', 'side');
                sn.part = 'main';
                break;
              default:
                if ((sn.levels.two != null) && (sn.levels.three != null)) {
                  $('html,body').animate({
                    scrollTop: 0
                  }, 0);
                  if (sn.levels.two === 'text') {
                    if (sn.levels.one !== sn.part) {
                      $(this).snModels('side', {
                        file: sn.levels.one + '.html'
                      });
                      $(this).snModels('primary', {
                        file: sn.levels.three + '.html'
                      });
                      $(this).snTriggers('links', 'side');
                      $(this).snTriggers('links', 'primary');
                      $(this).snTriggers('switch', 'bar', sn.levels.one);
                      $(this).snTriggers('switch', 'side', sn.levels.three);
                      $(this).snTriggers('hover', 'side');
                    } else {
                      $(this).snModels('primary', {
                        file: sn.levels.three + '.html'
                      });
                      $(this).snTriggers('links', 'primary');
                      $(this).snTriggers('switch', 'side', sn.levels.three);
                    }
                  }
                  sn.part = sn.levels.one;
                }
            }
            $(this).data('sn', sn);
            $(this).snEvents('anchor');
            return $(this).click();
          }
        }
      },
      anchor: function(options) {
        var e, height, sn;

        if (options == null) {
          options = {};
        }
        sn = $(this).data('sn');
        if (sn.levels.anchor !== '') {
          try {
            if ($('#anchor-' + sn.levels.anchor).length) {
              height = $('#anchor-' + sn.levels.anchor).offset().top - 87;
              if (height) {
                if ($('#side-' + sn.levels.anchor).length) {
                  $(this).snTriggers('switchSide', {
                    'link': sn.levels.anchor
                  });
                }
                return $('html,body').animate({
                  scrollTop: height
                }, 'slow');
              }
            }
          } catch (_error) {
            e = _error;
            if (typeof console !== "undefined" && console !== null) {
              return console.error('anchor', e);
            }
          }
        }
      }
    };
    return $.fn.snEvents = function(sn) {
      if (sn == null) {
        sn = {};
      }
      if (methods[sn]) {
        return methods[sn].apply(this, Array.prototype.slice.call(arguments, 1));
      } else {
        return methods.init.apply(this, arguments);
      }
    };
  });
});

$(function() {
  var methods;

  methods = {
    init: function(options) {
      if (options == null) {
        options = {};
      }
      $(this).snModels({
        elem: '#bar',
        layout: 'bar.html'
      });
      return $(this).snModels({
        elem: '#main',
        layout: 'main.html'
      });
    }
  };
  return $.fn.snLayout = function(sn) {
    if (sn == null) {
      sn = {};
    }
    if (methods[sn]) {
      return methods[sn].apply(this, Array.prototype.slice.call(arguments, 1));
    } else {
      return methods.init.apply(this, arguments);
    }
  };
});

$(function() {
  var methods;

  methods = {
    init: function(options) {
      var def;

      if (options == null) {
        options = {};
      }
      def = {
        elem: '#main',
        type: 'main',
        wiki: false
      };
      $.extend(def, options);
      return $(this).snModels('append', def);
    },
    primary: function(options) {
      var def;

      if (options == null) {
        options = {};
      }
      if (typeof console !== "undefined" && console !== null) {
        console.log('models: ' + 'primary');
      }
      def = {
        elem: '#primary',
        type: 'primary',
        wiki: true
      };
      $.extend(def, options);
      return $(this).snModels('append', def);
    },
    side: function(options) {
      var def;

      if (options == null) {
        options = {};
      }
      if (typeof console !== "undefined" && console !== null) {
        console.log('models: ' + 'side');
      }
      def = {
        elem: '#side',
        type: 'side',
        wiki: true
      };
      $.extend(def, options);
      return $(this).snModels('append', def);
    },
    append: function(def) {
      var sn, _this;

      if (def == null) {
        def = {};
      }
      _this = this;
      sn = $(this).data('sn');
      if (def.file != null) {
        return $(this).snModels('load', def, function(s) {
          def.text = s;
          $(_this).snModels('inner', def);
          if (def.type === 'primary') {
            return $(_this).snTriggers('spoiler');
          }
        });
      } else {
        if (def.text != null) {
          $(_this).snModels('inner', def);
          if (def.type === 'primary') {
            return $(_this).snTriggers('spoiler');
          }
        } else {
          if (def.view != null) {
            def.text = new EJS({
              url: 'view/' + def.view,
              ext: '.html'
            }).render(sn);
            $(_this).snModels('inner', def);
            if (def.type === 'primary') {
              return $(_this).snTriggers('spoiler');
            }
          } else {
            if (def.layout != null) {
              def.text = new EJS({
                url: 'layout/' + sn.region.name + '/' + def.layout,
                ext: '.html'
              }).render(sn);
              $(_this).snModels('inner', def);
              if (def.type === 'primary') {
                return $(_this).snTriggers('spoiler');
              }
            }
          }
        }
      }
    },
    inner: function(options) {
      var def;

      if (options == null) {
        options = {};
      }
      def = {
        elem: '#side-content',
        type: 'side',
        text: '',
        wiki: true,
        position: 'place'
      };
      $.extend(def, options);
      if (typeof console !== "undefined" && console !== null) {
        console.log('innerText: ' + def.type + ' ' + def.position);
      }
      if (def.wiki === true) {
        def.text = $(this).snWiki(def.type, {
          text: def.text
        });
      }
      switch (def.position) {
        case 'place':
          $(def.elem).html(def.text);
          break;
        case 'after':
          $(def.elem).html($(def.elem).html() + def.text);
          break;
        case 'before':
          $(def.elem).html(def.text + $(def.elem).html());
      }
      return $(this).snTriggers('plugins', def);
    },
    load: function(options, callback) {
      var def, sn;

      if (options == null) {
        options = {};
      }
      sn = $(this).data('sn');
      def = {
        url: '',
        type: 'view',
        file: 'news.html'
      };
      $.extend(def, options);
      switch (def.type) {
        case 'view':
          def.url = 'view/' + def.file;
          break;
        case 'layout':
          def.url = 'layout/' + sn.region.name + '/' + def.file;
          break;
        case 'primary':
          def.url = 'content/' + sn.region.name + '/' + def.file;
          break;
        case 'side':
          def.url = 'content/' + sn.region.name + '/side_' + def.file;
      }
      if (typeof console !== "undefined" && console !== null) {
        console.log('type: ' + def.type);
      }
      if (typeof console !== "undefined" && console !== null) {
        console.log('file: ' + def.file);
      }
      if (typeof console !== "undefined" && console !== null) {
        console.log('url: ' + def.url);
      }
      return $.ajax({
        url: def.url,
        async: false,
        cache: false,
        dataType: 'html',
        success: function(text) {
          if (text != null) {
            if (typeof console !== "undefined" && console !== null) {
              console.log('success');
            }
            if (callback) {
              return callback(text);
            }
          }
        }
      });
    }
  };
  return $.fn.snModels = function(sn) {
    if (sn == null) {
      sn = {};
    }
    if (methods[sn]) {
      return methods[sn].apply(this, Array.prototype.slice.call(arguments, 1));
    } else {
      return methods.init.apply(this, arguments);
    }
  };
});

$(function() {
  var methods;

  methods = {
    init: function(options) {
      if (options == null) {
        options = {};
      }
    },
    "switch": function(type, link) {
      if (type == null) {
        type = '';
      }
      if (link == null) {
        link = '';
      }
      switch (type) {
        case 'side':
          return $(this).snTriggers('switchSide', {
            link: link
          });
        case 'bar':
          return $(this).snTriggers('switchBar', {
            link: link
          });
      }
    },
    plugins: function(def) {
      if (def == null) {
        def = {};
      }
      if ($.isFunction($.bootstrapIE6)) {
        $.bootstrapIE6(def.elem);
      }
      return $(def.elem + ' .tooltip-toggle').tooltip();
    },
    hover: function(type) {
      if (type == null) {
        type = '';
      }
      switch (type) {
        case 'side':
          return $(this).snTriggers('switcherSide');
        case 'bar':
          return $(this).snTriggers('switcherBar');
      }
    },
    links: function(type) {
      if (type == null) {
        type = '';
      }
      switch (type) {
        case 'side':
          return $(this).snTriggers('linksSide');
        case 'primary':
          return $(this).snTriggers('linksPrimary');
        case 'bar':
          return $(this).snTriggers('linksBar');
      }
    },
    linksSide: function() {
      var _this;

      if (typeof console !== "undefined" && console !== null) {
        console.log('trigger: ' + 'linksSide');
      }
      _this = this;
      return $('#side a').on('click', function(e) {
        if ($(this).attr('href') !== '#' && !$(this).data('noevent')) {
          $('#side li').removeClass('active');
          $(this).parent('li').addClass('active');
          return $(_this).snEvents($(this).attr('href'));
        } else {
          return e.preventDefault();
        }
      });
    },
    linksPrimary: function() {
      var _this;

      if (typeof console !== "undefined" && console !== null) {
        console.log('trigger: ' + 'linksPrimary');
      }
      _this = this;
      return $('#primary a').on('click', function(e) {
        if ($(this).attr('href') !== '#' && !$(this).data('noevent')) {
          return $(_this).snEvents($(this).attr('href'));
        } else {
          return e.preventDefault();
        }
      });
    },
    linksBar: function() {
      var _this;

      _this = this;
      if (typeof console !== "undefined" && console !== null) {
        console.log('trigger: ' + 'linksBar');
      }
      return $('#bar a').on('click', function(e) {
        if ($(this).attr('href') !== '#' && $(this).data('toggle') !== 'dropdown' && !$(this).data('noevent')) {
          $('#bar li').removeClass('active');
          $(this).parent('li').addClass('active');
          return $(_this).snEvents($(this).attr('href'));
        } else {
          return e.preventDefault();
        }
      });
    },
    switchBar: function(options) {
      if (options == null) {
        return options = {};
      }
      /*
      			console.log 'trigger: ' + 'switchBar' if console?
      
      			def =
      				link: 'main'
      
      			$.extend def, options
      
      			$('.bar-button')
      				.removeClass('bar-button-active')
      				.removeClass('bar-button-hover')
      				.addClass('bar-button-normal')
      
      			$('#bar-'+def.link)
      				.removeClass('bar-button-normal')
      				.removeClass('bar-button-hover')
      				.addClass('bar-button-active')
      				.blur()
      */

    },
    switchSide: function(options) {
      if (options == null) {
        return options = {};
      }
      /*
      			console.log 'trigger: ' + 'switchSide' if console?
      
      			def=
      				link: 'above'
      
      			$.extend(def,options)
      
      			$('.side-box-link')
      				.removeClass('side-box-link-active')
      				.removeClass('side-box-link-hover')
      				.addClass('side-box-link-normal')
      
      			$('#side-'+def.link)
      				.removeClass('side-box-link-normal')
      				.removeClass('side-box-link-hover')
      				.addClass('side-box-link-active')
      				.blur()
      */

    },
    switcherBar: function() {
      if (typeof console !== "undefined" && console !== null) {
        console.log('trigger: ' + 'switcherBar');
      }
      $('.bar-link').on('mouseover', function() {
        if (!$(this).parent('li').hasClass('active')) {
          return $(this).parent('li').removeClass('normal').addClass('hover');
        }
      });
      return $('.bar-link').on('mouseleave', function() {
        if (!$(this).parent('li').hasClass('active')) {
          return $(this).parent('li').removeClass('hover').addClass('normal');
        }
      });
    },
    switcherSide: function() {
      if (typeof console !== "undefined" && console !== null) {
        console.log('trigger: ' + 'switcherSide');
      }
      $('.side-link').on('mouseover', function() {
        if (!$(this).parent('li').hasClass('active')) {
          return $(this).parent('li').removeClass('normal').addClass('hover');
        }
      });
      return $('.side-link').on('mouseleave', function() {
        if (!$(this).parent('li').hasClass('active')) {
          return $(this).parent('li').removeClass('hover').addClass('normal');
        }
      });
    },
    spoiler: function() {
      if (typeof console !== "undefined" && console !== null) {
        console.log('trigger: ' + 'spoiler');
      }
      return $('.spoiler-caption').on('click', function(e) {
        e.preventDefault();
        if ($(this).hasClass('spoiler-open')) {
          $(this).removeClass('spoiler-open').addClass('spoiler-close');
        } else {
          $(this).removeClass('spoiler-close').addClass('spoiler-open');
        }
        return $(this).parent('.spoiler').children('.spoiler-body').each(function() {
          if ($(this).hasClass('spoiler-open')) {
            return $(this).removeClass('spoiler-open').addClass('spoiler-close').hide();
          } else {
            return $(this).removeClass('spoiler-close').addClass('spoiler-open').show();
          }
        });
      });
    }
  };
  return $.fn.snTriggers = function(sn) {
    if (sn == null) {
      sn = {};
    }
    if (methods[sn]) {
      return methods[sn].apply(this, Array.prototype.slice.call(arguments, 1));
    } else {
      return methods.init.apply(this, arguments);
    }
  };
});

$(function() {
  var methods;

  methods = {
    init: function(options) {
      if (options == null) {
        options = {};
      }
    },
    primary: function(options) {
      var def, text, _this;

      if (options == null) {
        options = {};
      }
      if (typeof console !== "undefined" && console !== null) {
        console.log('wiki: ' + 'primary');
      }
      _this = this;
      def = {
        text: ''
      };
      $.extend(true, def, options);
      text = def.text;
      text = $(_this).snWiki('before', {
        text: text
      });
      text = $(_this).snWiki('formating', {
        text: text
      });
      text = $(_this).snWiki('headings', {
        text: text
      });
      text = $(_this).snWiki('icons', {
        text: text
      });
      text = $(_this).snWiki('externalLinks', {
        text: text
      });
      text = $(_this).snWiki('fileLinks', {
        text: text
      });
      text = $(_this).snWiki('internalLinks', {
        text: text
      });
      text = $(_this).snWiki('mailTo', {
        text: text
      });
      text = $(_this).snWiki('image', {
        text: text
      });
      text = $(_this).snWiki('fonts', {
        text: text
      });
      text = $(_this).snWiki('anchor', {
        text: text
      });
      text = $(_this).snWiki('ind', {
        text: text
      });
      text = $(_this).snWiki('spoiler', {
        text: text
      });
      text = $(_this).snWiki('header', {
        text: text
      });
      text = $(_this).snWiki('spaces', {
        text: text
      });
      text = $(_this).snWiki('noevent', {
        text: text
      });
      return text;
    },
    side: function(options) {
      var def, text, _this;

      if (options == null) {
        options = {};
      }
      if (typeof console !== "undefined" && console !== null) {
        console.log('wiki: ' + 'side');
      }
      _this = this;
      def = {
        text: ''
      };
      $.extend(true, def, options);
      text = def.text;
      text = $(_this).snWiki('before', {
        text: text
      });
      text = $(_this).snWiki('formating', {
        text: text
      });
      text = $(_this).snWiki('headings', {
        text: text
      });
      text = $(_this).snWiki('icons', {
        text: text
      });
      text = $(_this).snWiki('externalLinks', {
        text: text
      });
      text = $(_this).snWiki('fileLinks', {
        text: text
      });
      text = $(_this).snWiki('internalLinks', {
        text: text
      });
      text = $(_this).snWiki('mailTo', {
        text: text
      });
      text = $(_this).snWiki('image', {
        text: text
      });
      text = $(_this).snWiki('fonts', {
        text: text
      });
      text = $(_this).snWiki('anchor', {
        text: text
      });
      text = $(_this).snWiki('gismeteo', {
        text: text
      });
      text = $(_this).snWiki('ind', {
        text: text
      });
      text = $(_this).snWiki('sideMenu', {
        text: text
      });
      text = $(_this).snWiki('spaces', {
        text: text
      });
      text = $(_this).snWiki('noevent', {
        text: text
      });
      return text;
    },
    before: function(options) {
      var def, text;

      if (options == null) {
        options = {};
      }
      def = {
        text: ''
      };
      $.extend(def, options);
      text = def.text;
      return text.replace(/\|\n/g, '').replace(/\]\n\n/g, ']<br><br>').replace(/\]\n/g, ']<br>').replace(/>\n\n/g, '>\n');
    },
    formating: function(options) {
      var def, text;

      if (options == null) {
        options = {};
      }
      def = {
        text: ''
      };
      $.extend(def, options);
      text = def.text;
      return text.replace(/'''''(.*?)'''''/g, "<i><b>$1</b></i>").replace(/'''(.*?)'''/g, "<b>$1</b>").replace(/''(.*?)''/g, "<i>$1</i>");
    },
    headings: function(options) {
      var def, text;

      if (options == null) {
        options = {};
      }
      def = {
        text: ''
      };
      $.extend(def, options);
      text = def.text;
      text = text.replace(/======(.*?)======\n?/g, "<h6>$1</h6>");
      text = text.replace(/=====(.*?)=====\n?/g, "<h5>$1</h5>");
      text = text.replace(/====(.*?)====\n?/g, "<h4>$1</h4>");
      text = text.replace(/===(.*?)===\n?/g, "<h3>$1</h3>");
      return text = text.replace(/==(.*?)==\n?/g, "<h2>$1</h2>");
    },
    icons: function(options) {
      var def, text;

      if (options == null) {
        options = {};
      }
      def = {
        text: ''
      };
      $.extend(def, options);
      return text = def.text.replace(/\[(i|ico|icon|icons):icon-([a-zA-Z0-9\_\-]+)[\s]+(inverse|white)\]/g, '<i class="icon-$2 icon-white"></i>').replace(/\[(i|ico|icon|icons):([a-zA-Z0-9\_\-]+)[\s]+(inverse|white)\]/g, '<i class="icon-$2 icon-white"></i>').replace(/\[(i|ico|icon|icons):icon-([a-zA-Z0-9\_\-]+)\]/g, '<i class="icon-$2"></i>').replace(/\[(i|ico|icon|icons):([a-zA-Z0-9\_\-]+)\]/g, '<i class="icon-$2"></i>').replace(/([\s]+)(i|ico|icon|icons):icon-([a-zA-Z0-9\_\-]+)[\s]+(inverse|white)([\s]+)/g, '$1<i class="icon-$3 icon-white"></i>$4').replace(/([\s]+)(i|ico|icon|icons):([a-zA-Z0-9\_\-]+)[\s]+(inverse|white)([\s]+)/g, '$1<i class="icon-$3 icon-white"></i>$4').replace(/([\s]+)(i|ico|icon|icons):icon-([a-zA-Z0-9\_\-]+)([\s]+)/g, '$1<i class="icon-$3"></i>$4').replace(/([\s]+)(i|ico|icon|icons):([a-zA-Z0-9\_\-]+)([\s]+)/g, '$1<i class="icon-$3"></i>$4');
    },
    internalLinks: function(options) {
      var def, text;

      if (options == null) {
        options = {};
      }
      def = {
        text: ''
      };
      $.extend(def, options);
      text = def.text;
      return text.replace(/\[b(tn|utton)[\s]+(primary|info|success|warning|danger|inverse|link)[\s]+#([a-zA-Z0-9\-\.\/\?%\#_\:]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+(left|top|right|bottom)\]/g, '<a href="#$3" class="btn btn-$2 tooltip-toggle" data-placement="$6" rel="tooltip" title="$5">$4</a>').replace(/\[b(tn|utton)[\s]+(primary|info|success|warning|danger|inverse|link)[\s]+#([a-zA-Z0-9\-\.\/\?%\#_\:]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a href="#$3" class="btn btn-$2 tooltip-toggle" rel="tooltip" title="$5">$4</a>').replace(/\[b(tn|utton)[\s]+(primary|info|success|warning|danger|inverse|link)[\s]+#([a-zA-Z0-9\-\.\/\?%\#_\:]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+(left|top|right|bottom)\]/g, '<a href="#$3" class="btn btn-$2 tooltip-toggle" data-placement="$5" rel="tooltip" title="$4">$3</a>').replace(/\[b(tn|utton)[\s]+(primary|info|success|warning|danger|inverse|link)[\s]+#([a-zA-Z0-9\-\.\/\?%\#_\:]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a href="#$3" class="btn btn-$2 tooltip-toggle" rel="tooltip" title="$4">$3</a>').replace(/\[b(tn|utton)[\s]+(primary|info|success|warning|danger|inverse|link)[\s]+#([a-zA-Z0-9\-\.\/\?%\#_\:]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a class="btn btn-$2" href="#$3">$4</a>').replace(/\[b(tn|utton)[\s]+(primary|info|success|warning|danger|inverse|link)[\s]+#([a-zA-Z0-9\-\.\/\?%\#_\:]+)\]/g, '<a class="btn btn-$2" href="#$1">$1</a>').replace(/\[b(tn|utton)[\s]+#([a-zA-Z0-9\-\.\/\?%\#_\:]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+(left|top|right|bottom)\]/g, '<a href="#$2" class="btn tooltip-toggle" data-placement="$5" rel="tooltip" title="$4">$3</a>').replace(/\[b(tn|utton)[\s]+#([a-zA-Z0-9\-\.\/\?%\#_\:]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a href="#$2" class="btn tooltip-toggle" rel="tooltip" title="$4">$3</a>').replace(/\[b(tn|utton)[\s]+#([a-zA-Z0-9\-\.\/\?%\#_\:]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+(left|top|right|bottom)\]/g, '<a href="#$2" class="btn tooltip-toggle" data-placement="$4" rel="tooltip" title="$3">$2</a>').replace(/\[b(tn|utton)[\s]+#([a-zA-Z0-9\-\.\/\?%\#_\:]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a href="#$2" class="btn tooltip-toggle" rel="tooltip" title="$3">$2</a>').replace(/\[b(tn|utton)[\s]+#([a-zA-Z0-9\-\.\/\?%\#_\:]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a class="btn" href="#$2">$3</a>').replace(/\[b(tn|utton)[\s]+#([a-zA-Z0-9\-\.\/\?%\#_\:]+)\]/g, '<a href="#$1">$1</a>').replace(/\[#([a-zA-Z0-9\-\.\/\?%\#_\:]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+(left|top|right|bottom)\]/g, '<a href="#$1" class="tooltip-toggle" data-placement="$4" rel="tooltip" title="$3">$2</a>').replace(/\[#([a-zA-Z0-9\-\.\/\?%\#_\:]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a href="#$1" class="tooltip-toggle" rel="tooltip" title="$3">$2</a>').replace(/\[#([a-zA-Z0-9\-\.\/\?%\#_\:]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+(left|top|right|bottom)\]/g, '<a href="#$1" class="tooltip-toggle" data-placement="$3" rel="tooltip" title="$2">$1</a>').replace(/\[#([a-zA-Z0-9\-\.\/\?%\#_\:]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a href="#$1" class="tooltip-toggle" rel="tooltip" title="$2">$1</a>').replace(/\[#([a-zA-Z0-9\-\.\/\?%\#_\:]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a href="#$1">$2</a>').replace(/\[#([a-zA-Z0-9\-\.\/\?%\#_\:]+)\]/g, '<a href="#$1">$1</a>').replace(/([\s+])#([a-zA-Z0-9\-\.\/\?%\#_\:]+)([\s]+)/g, '$1<a href="#$2">$2</a>$3');
    },
    externalLinks: function(options) {
      var def, text;

      if (options == null) {
        options = {};
      }
      def = {
        text: ''
      };
      $.extend(def, options);
      text = def.text;
      return text.replace(/\[b(tn|utton)[\s]+(primary|info|success|warning|danger|inverse|link)[\s]+https?:\/\/([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+) (left|top|right|bottom)\]/g, '<a href="http://$3" class="btn btn-$2 tooltip-toggle" data-placement="$6" rel="tooltip" title="$5" target="_blank">$4</a>').replace(/\[b(tn|utton)[\s]+(primary|info|success|warning|danger|inverse|link)[\s]+https?:\/\/([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a href="http://$3" class="btn btn-$2 tooltip-toggle" rel="tooltip" title="$5" target="_blank">$4</a>').replace(/\[b(tn|utton)[\s]+(primary|info|success|warning|danger|inverse|link)[\s]+https?:\/\/([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+(left|top|right|bottom)\]/g, '<a href="http://$3" class="btn btn-$2 tooltip-toggle" data-placement="$5" rel="tooltip" title="$4" target="_blank">$3</a>').replace(/\[b(tn|utton)[\s]+(primary|info|success|warning|danger|inverse|link)[\s]+https?:\/\/([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a href="http://$3" class="btn btn-$2 tooltip-toggle" rel="tooltip" title="$4" target="_blank">$3</a>').replace(/\[b(tn|utton)[\s]+(primary|info|success|warning|danger|inverse|link)[\s]+https?:\/\/([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a href="http://$3" class="btn btn-$2" target="_blank">$4</a>').replace(/\[b(tn|utton)[\s]+(primary|info|success|warning|danger|inverse|link)[\s]+https?:\/\/([a-zA-Z0-9\-\.\/\?%\#_]+)\]/g, '<a class="btn btn-$2" href="http://$2" target="_blank">$2</a>').replace(/\[b(tn|utton)[\s]+https?:\/\/([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+) (left|top|right|bottom)\]/g, '<a href="http://$2" class="btn tooltip-toggle" data-placement="$5" rel="tooltip" title="$4" target="_blank">$3</a>').replace(/\[b(tn|utton)[\s]+https?:\/\/([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a href="http://$2" class="btn tooltip-toggle" rel="tooltip" title="$4" target="_blank">$3</a>').replace(/\[b(tn|utton)[\s]+https?:\/\/([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+(left|top|right|bottom)\]/g, '<a href="http://$2" class="btn tooltip-toggle" data-placement="$4" rel="tooltip" title="$3" target="_blank">$2</a>').replace(/\[b(tn|utton)[\s]+https?:\/\/([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a href="http://$2" class="tooltip-toggle" rel="tooltip" title="$3" target="_blank">$2</a>').replace(/\[b(tn|utton)[\s]+https?:\/\/([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a class="btn" href="http://$2" target="_blank">$3</a>').replace(/\[b(tn|utton)[\s]+https?:\/\/([a-zA-Z0-9\-\.\/\?%\#_]+)\]/g, '<a class="btn" href="http://$2" target="_blank">$2</a>').replace(/\[https?:\/\/([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+(left|top|right|bottom)\]/g, '<a href="http://$1" class="tooltip-toggle" data-placement="$4" rel="tooltip" title="$3" target="_blank">$2</a>').replace(/\[https?:\/\/([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a href="http://$1" class="tooltip-toggle" rel="tooltip" title="$3" target="_blank">$2</a>').replace(/\[https?:\/\/([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+(left|top|right|bottom)\]/g, '<a href="http://$1" class="tooltip-toggle" data-placement="$3" rel="tooltip" title="$2" target="_blank">$1</a>').replace(/\[https?:\/\/([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a href="http://$1" class="tooltip-toggle" rel="tooltip" title="$2" target="_blank">$1</a>').replace(/\[https?:\/\/([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a href="http://$1" target="_blank">$2</a>').replace(/\[https?:\/\/([a-zA-Z0-9\-\.\/\?%\#_]+)\]/g, '<a href="http://$1" target="_blank">$1</a>').replace(/([\s]+)https?:\/\/([a-zA-Z0-9\-\.\/\?%\#_]+)([\s]+)/g, '$1<a href="http://$2" target="_blank">$2</a>$3');
    },
    fileLinks: function(options) {
      var def, sn, text;

      if (options == null) {
        options = {};
      }
      sn = $(this).data('sn');
      def = {
        text: ''
      };
      $.extend(def, options);
      text = def.text;
      return text.replace(/\[b(tn|utton)[\s]+(primary|info|success|warning|danger|inverse|link)[\s]+files?:([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+(left|top|right|bottom)\]/g, '<a href="http://oz.st-n.ru/publish/files/' + sn.region.name + '/$3" class="btn btn-$2 tooltip-toggle" rel="tooltip" data-placement="$6" title="$5" target="_blank">$4</a>').replace(/\[b(tn|utton)[\s]+(primary|info|success|warning|danger|inverse|link)[\s]+files?:([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a href="http://oz.st-n.ru/publish/files/' + sn.region.name + '/$3" class="btn btn-$2 tooltip-toggle" rel="tooltip" title="$5" target="_blank">$4</a>').replace(/\[b(tn|utton)[\s]+(primary|info|success|warning|danger|inverse|link)[\s]+files?:([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+(left|top|right|bottom)\]/g, '<a href="http://oz.st-n.ru/publish/files/' + sn.region.name + '/$3" class="btn btn-$2 tooltip-toggle" rel="tooltip" data-placement="$5" title="$4" target="_blank">$3</a>').replace(/\[b(tn|utton)[\s]+(primary|info|success|warning|danger|inverse|link)[\s]+files?:([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a href="http://oz.st-n.ru/publish/files/' + sn.region.name + '/$3" class="btn btn-$2 tooltip-toggle" rel="tooltip" title="$4" target="_blank">$3</a>').replace(/\[b(tn|utton)[\s]+(primary|info|success|warning|danger|inverse|link)[\s]+files?:([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a class="btn btn-$2" href="http://oz.st-n.ru/publish/files/' + sn.region.name + '/$3" target="_blank">$4</a>').replace(/\[b(tn|utton)[\s]+(primary|info|success|warning|danger|inverse|link)[\s]+files?:([a-zA-Z0-9\-\.\/\?%\#_]+)\]/g, '<a class="btn btn-$2" href="http://oz.st-n.ru/publish/files/' + sn.region.name + '/$3" target="_blank">$3</a>').replace(/\[b(tn|utton)[\s]+files?:([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+(left|top|right|bottom)\]/g, '<a href="http://oz.st-n.ru/publish/files/' + sn.region.name + '/$2" class="btn tooltip-toggle" rel="tooltip" data-placement="$5" title="$4" target="_blank">$3</a>').replace(/\[b(tn|utton)[\s]+files?:([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a href="http://oz.st-n.ru/publish/files/' + sn.region.name + '/$2" class="btn tooltip-toggle" rel="tooltip" title="$4" target="_blank">$3</a>').replace(/\[b(tn|utton)[\s]+files?:([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+(left|top|right|bottom)\]/g, '<a href="http://oz.st-n.ru/publish/files/' + sn.region.name + '/$2" class="btn tooltip-toggle" rel="tooltip" data-placement="$4" title="$3" target="_blank">$2</a>').replace(/\[b(tn|utton)[\s]+files?:([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a href="http://oz.st-n.ru/publish/files/' + sn.region.name + '/$2" class="btn tooltip-toggle" rel="tooltip" title="$3" target="_blank">$2</a>').replace(/\[b(tn|utton)[\s]+files?:([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a class="btn" href="http://oz.st-n.ru/publish/files/' + sn.region.name + '/$2" target="_blank">$3</a>').replace(/\[b(tn|utton)[\s]+files?:([a-zA-Z0-9\-\.\/\?%\#_]+)\]/g, '<a class="btn" href="http://oz.st-n.ru/publish/files/' + sn.region.name + '/$2" target="_blank">$2</a>').replace(/\[files?:([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+(left|top|right|bottom)\]/g, '<a href="http://oz.st-n.ru/publish/files/' + sn.region.name + '/$1" class="tooltip-toggle" rel="tooltip" data-placement="$4" title="$3" target="_blank">$2</a>').replace(/\[files?:([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a href="http://oz.st-n.ru/publish/files/' + sn.region.name + '/$1" class="tooltip-toggle" rel="tooltip" title="$3" target="_blank">$2</a>').replace(/\[files?:([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+(left|top|right|bottom)\]/g, '<a href="http://oz.st-n.ru/publish/files/' + sn.region.name + '/$1" class="tooltip-toggle" rel="tooltip" data-placement="$3" title="$2" target="_blank">$1</a>').replace(/\[files?:([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+\|[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a href="http://oz.st-n.ru/publish/files/' + sn.region.name + '/$1" class="tooltip-toggle" rel="tooltip" title="$2" target="_blank">$1</a>').replace(/\[files?:([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<a href="http://oz.st-n.ru/publish/files/' + sn.region.name + '/$1" target="_blank">$2</a>').replace(/\[files?:([a-zA-Z0-9\-\.\/\?%\#_]+)\]/g, '<a href="http://oz.st-n.ru/publish/files/' + sn.region.name + '/$1" target="_blank">$1</a>').replace(/([\s]+)files?:([a-zA-Z0-9\-\.\/\?%\#_]+)([\s]+)/g, '$1<a href="http://oz.st-n.ru/publish/files/' + sn.region.name + '/$2" target="_blank">$2</a>$3');
    },
    mailTo: function(options) {
      var def, text;

      if (options == null) {
        options = {};
      }
      def = {
        text: ''
      };
      $.extend(def, options);
      text = def.text;
      return text.replace(/\[e\-?mail:([a-zA-Z0-9@\-\.\/\?%\#_]+)[\s]+(.*?)\]/g, '<a href="mailto:$1">$2</a>').replace(/\[e\-?mail:([a-zA-Z0-9@\-\.\/\?%\#_]+)\]/g, '<a href="mailto:$1">$1</a>');
    },
    photo: function(options) {
      var def, sn, text;

      if (options == null) {
        options = {};
      }
      sn = $(this).data('sn');
      def = {
        text: ''
      };
      $.extend(def, options);
      text = def.text;
      return text.replace(/\[photo:([a-zA-Z0-9\-\.\/\?%\#_]+)\]/g, '<img align="center" style="width:99%;margin:auto;" src="http://oz.st-n.ru/publish/photo/' + sn.region.name + '/$1">');
    },
    image: function(options) {
      var def, sn, text;

      if (options == null) {
        options = {};
      }
      sn = $(this).data('sn');
      def = {
        text: ''
      };
      $.extend(def, options);
      text = def.text;
      return text.replace(/\[(img|image|picture|photo):([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+(right|left)\]/g, '<img class="pull-$3" src="http://oz.st-n.ru/publish/photo/' + sn.region.name + '/$2">').replace(/\[(img|image|picture|photo):([a-zA-Z0-9\-\.\/\?%\#_]+)\]/g, '<img src="http://oz.st-n.ru/publish/photo/' + sn.region.name + '/$2">').replace(/([\s]+)(img|image|picture|photo):([a-zA-Z0-9\-\.\/\?%\#_]+)[\s]+(right|left)([\s]+)/g, '$1<img class="pull-$4" src="http://oz.st-n.ru/publish/photo/' + sn.region.name + '/$3">$5').replace(/([\s]+)(img|image|picture|photo):([a-zA-Z0-9\-\.\/\?%\#_]+)([\s]+)/g, '$1<img src="http://oz.st-n.ru/publish/photo/' + sn.region.name + '/$3">$4');
    },
    fonts: function(options) {
      var def, text;

      if (options == null) {
        options = {};
      }
      def = {
        text: ''
      };
      $.extend(def, options);
      text = def.text;
      return text.replace(/\[badge[\s]+(success|warning|important|info|inverse)\][\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)/g, '<span class="badge badge-$1">$2</span>').replace(/\[badge[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+(success|warning|important|info|inverse)\]/g, '<span class="badge badge-$2">$1</span>').replace(/\[badge[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<span class="badge">$1</span>').replace(/\[label[\s]+(success|warning|important|info|inverse)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<span class="label label-$1">$2</span>').replace(/\[label[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)[\s]+(success|warning|important|info|inverse)\]/g, '<span class="label label-$2">$1</span>').replace(/\[label[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<span class="label">$1</span>').replace(/\[color:\#([a-zA-Z0-9]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<font style="color:#$1">$2</font>').replace(/\[color:([a-zA-Z0-9]+)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]/g, '<span class="$1">$2</span>').replace(/\[\[color:\#([a-zA-Z0-9]+)\](.*?)\]/g, '<font style="color:#$1">$2</font>').replace(/\[\[color:([a-zA-Z0-9]+)\](.*?)\]/g, '<span class="$1">$2</span>');
    },
    ind: function(options) {
      var def, text;

      if (options == null) {
        options = {};
      }
      def = {
        text: ''
      };
      $.extend(def, options);
      text = def.text;
      return text.replace(/<<<\n?/g, '<div class="well well-small">').replace(/>>>\n?/g, '</div>');
    },
    anchor: function(options) {
      var def, text;

      if (options == null) {
        options = {};
      }
      def = {
        text: ''
      };
      $.extend(def, options);
      text = def.text;
      return text.replace(/\[anchor:([a-zA-Z0-9\-\.\/\?%\#_]+)\]\n?/g, '<a id="anchor-$1"></a>');
    },
    sideMenu: function(options) {
      var def, text;

      if (options == null) {
        options = {};
      }
      def = {
        text: ''
      };
      $.extend(def, options);
      text = def.text;
      return text.replace(/\[menu:#([a-zA-Z0-9\-\.\/\?%\#_\:]+) ([a-zA-Z0-9\-\.\/\?%\#_]+) (.*?)\]\n?/g, '<a class="side-box-link side-box-link-normal" href="#$1" id="side-$2">$3</a>');
    },
    gismeteo: function(options) {
      var def, sn, text;

      if (options == null) {
        options = {};
      }
      sn = $(this).data('sn');
      def = {
        text: ''
      };
      $.extend(def, options);
      text = def.text;
      return text.replace(/\[gismeteo\]\n?/g, '<iframe src="http://oz.st-n.ru/gismeteo/' + sn.region.name + '/" width="96%" height="160" scrolling="no" marginheight="0" marginwidth="0" frameborder="0"></iframe>&nbsp;');
    },
    spoiler: function(options) {
      var def, text;

      if (options == null) {
        options = {};
      }
      def = {
        text: ''
      };
      $.extend(def, options);
      text = def.text;
      return text.replace(/<<\[b(tn|utton)[\s]+(primary|info|success|warning|danger|inverse|link)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]\n?/g, '<div class="spoiler">' + '<a href="#spoiler" class="btn btn-$2 spoiler-caption spoiler-close">' + '<span class="caret"></span>&nbsp;$3</a><p>' + '<div class="hide spoiler-body spoiler-close"><pre>').replace(/<<\[b(tn|utton)[\s]+([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]\n?/g, '<div class="spoiler">' + '<a href="#spoiler" class="btn spoiler-caption spoiler-close">' + '<span class="caret"></span>&nbsp;$2</a><p>' + '<div class="hide spoiler-body spoiler-close"><pre>').replace(/<<\[([\s0-9a-zA-Zа-яА-Я\_\.\/\-\?\!\*\#\'\"\<\>\=\,\;\:\(\)\№\«\»]+)\]\n?/g, '<div class="spoiler">' + '<a href="#spoiler" class="spoiler-caption spoiler-close">' + '$1</a><p>' + '<div class="hide spoiler-body spoiler-close"><pre>').replace(/>>\n?/g, '</pre></div></p></div>');
    },
    header: function(options) {
      var def, text;

      if (options == null) {
        options = {};
      }
      def = {
        text: ''
      };
      $.extend(def, options);
      text = def.text;
      return text.replace(/<\[\n?/g, '<div class="page-header">').replace(/\]>\n?/g, '</div>');
    },
    noevent: function(options) {
      var def, text;

      if (options == null) {
        options = {};
      }
      def = {
        text: ''
      };
      $.extend(def, options);
      text = def.text;
      return text.replace(/(href="#")/g, '$1 data-noevent="true"');
    },
    spaces: function(options) {
      var def, text;

      if (options == null) {
        options = {};
      }
      def = {
        text: ''
      };
      $.extend(def, options);
      text = def.text;
      return text.replace(/^\n/, "").replace(/\n\n/g, "<br><br>").replace(/>\n?/g, '>').replace(/<pre><br>/g, '<pre>').replace(/\n/g, "<br>");
    }
  };
  return $.fn.snWiki = function(sn) {
    if (sn == null) {
      sn = {};
    }
    if (methods[sn]) {
      return methods[sn].apply(this, Array.prototype.slice.call(arguments, 1));
    } else {
      return methods.init.apply(this, arguments);
    }
  };
});

$(function() {
  var methods;

  methods = {
    init: function(options) {
      if (options == null) {
        options = {};
      }
    },
    checkEnterForm: function(options) {
      var sn;

      if (options == null) {
        options = {};
      }
      sn = $(this).data('sn');
      if (typeof console !== "undefined" && console !== null) {
        console.log('enter: ' + 'checkEnterForm');
      }
      alert('enter');
      console.info('sn', sn);
      return false;
    }
  };
  return $.fn.snEnter = function(sn) {
    if (sn == null) {
      sn = {};
    }
    if (methods[sn]) {
      return methods[sn].apply(this, Array.prototype.slice.call(arguments, 1));
    } else {
      return methods.init.apply(this, arguments);
    }
  };
});

$(function() {
  var methods;

  methods = {
    init: function(options) {
      if (options == null) {
        options = {};
      }
    },
    checkRegForm: function(options) {
      var def, _this;

      if (options == null) {
        options = {};
      }
      _this = this;
      if (typeof console !== "undefined" && console !== null) {
        console.log('registration: ' + 'checkRegForm');
      }
      def = {
        error: false
      };
      $.extend(true, def, options);
      $('.signin-warning').hide();
      $('.signin-form-warning').hide();
      $('.signin-type-reg').each(function() {
        var check, __this;

        __this = this;
        check = $(_this).snValidation('checkField', {
          type: $(this).data('check-type'),
          value: $(this).val(),
          caption: $(this).data('def-value')
        });
        if (check.error !== void 0) {
          if (check.error) {
            def.error = true;
          }
        }
        $('.signin-warning').each(function() {
          if ($(this).data('check-type') === $(__this).data('check-type')) {
            if (check.error !== void 0) {
              if (check.error) {
                return $(this).html(check.start + ' ' + check.caption + ' ' + check.exp).show();
              }
            }
          }
        });
        $('.signin-form-warning').each(function() {
          if ($(this).data('check-type') === $(__this).data('check-type')) {
            if (check.error !== void 0) {
              if (check.error) {
                return $(this).show();
              }
            }
          }
        });
        return $('.signin-form-check').each(function() {
          if ($(this).data('check-type') === $(__this).data('check-type')) {
            if (check.error !== void 0) {
              if ($(this).hasClass('signin-form-check-clear')) {
                $(this).removeClass('signin-form-check-clear');
              }
              if (check.error) {
                $(this).removeClass('signin-form-check-true');
                return $(this).addClass('signin-form-check-false');
              } else {
                $(this).removeClass('signin-form-check-false');
                return $(this).addClass('signin-form-check-true');
              }
            }
          }
        });
      });
      console.info('afterCheckRegForm', def);
      $(this).snRegistration('afterCheckRegForm', def);
      return false;
    },
    afterCheckRegForm: function(options) {
      var def;

      if (options == null) {
        options = {};
      }
      if (typeof console !== "undefined" && console !== null) {
        console.log('registration: ' + 'afterCheckRegForm');
      }
      def = {
        error: false
      };
      $.extend(true, def, options);
      if (def.error) {
        return console.warn('ошибки при проверке формы регистрации');
      } else {
        alert('bez oshibok');
        console.info('regOnServer');
        return $(this).snRegistration('regOnServer');
      }
    },
    regOnServer: function(options) {
      var def, sn, _this;

      if (options == null) {
        options = {};
      }
      if (typeof console !== "undefined" && console !== null) {
        console.log('registration: ' + 'regOnServer');
      }
      def = {
        debug: false,
        type: 'jsonp',
        firstname: $('#signin-input-firstname').val(),
        lastname: $('#signin-input-lastname').val(),
        patronymic: $('#signin-input-patronymic').val(),
        email: $('#signin-input-email').val(),
        phone: $('#signin-input-phone').val(),
        company: $('#signin-input-company').val(),
        post: $('#signin-input-post').val(),
        error: false
      };
      _this = this;
      $.extend(true, def, options);
      if (def.debug) {
        def.type = 'text';
      }
      sn = $(this).data('sn');
      return $.ajax({
        url: 'http://oz.st-n.ru/server-dev/?callback=?',
        async: false,
        type: 'POST',
        data: {
          action: 'registration',
          region: sn.region.name,
          theme: sn.theme.name,
          firstname: def.firstname,
          lastname: def.lastname,
          patronymic: def.patronymic,
          email: def.email,
          phone: def.phone,
          company: def.company,
          post: def.post
        },
        dataType: def.type,
        timeout: 10000,
        success: function(s) {
          $.extend(true, sn.result, s.registration);
          if (def.debug) {
            alert(s);
          }
          $(_this).data('sn', sn);
          if (sn.result.alert) {
            alert(sn.result.alert);
          }
          if (typeof console !== "undefined" && console !== null) {
            console.log('afterCheckRegFormOnServer', s);
          }
          return $(_this).snRegistration('afterCheckRegFormOnServer', s);
        },
        error: function(XMLHttpRequest, textStatus, error) {
          if (typeof console !== "undefined" && console !== null) {
            return console.error('ajax:', textStatus, error);
          }
        }
      });
    },
    afterSuccessReg: function(options) {
      var sn;

      if (options == null) {
        options = {};
      }
      sn = $(this).data('sn');
      if (typeof console !== "undefined" && console !== null) {
        console.log('registration: ' + 'afterSuccessReg');
      }
      return alert('afterSuccessReg');
    },
    afterCheckRegFormOnServer: function(options) {
      var def, sn;

      if (options == null) {
        options = {};
      }
      if (typeof console !== "undefined" && console !== null) {
        console.log('registration: ' + 'afterCheckRegFormOnServer');
      }
      def = {
        'error': false,
        'start': 'В поле'
      };
      $.extend(true, def, options);
      sn = $(this).data('sn');
      if (sn.result.reg) {
        $(this).snRegistration('afterSuccessReg', def);
      }
      if (!sn.result.reg) {
        def.error = true;
        if (sn.result.valid) {
          return $.each(sn.result.valid, function(field, check) {
            $('.signin-warning').each(function() {
              if ($(this).data('check-type') === field) {
                if (check.error !== void 0) {
                  if (check.error) {
                    return $(this).html(def.start + ' ' + check.def + ' ' + check.exp).show();
                  }
                }
              }
            });
            $('.signin-form-warning').each(function() {
              if ($(this).data('check-type') === field) {
                if (check.error !== void 0) {
                  if (check.error) {
                    return $(this).show();
                  }
                }
              }
            });
            return $('.signin-form-check').each(function() {
              if ($(this).data('check-type') === field) {
                if (check.error !== void 0) {
                  if ($(this).hasClass('signin-form-check-clear')) {
                    $(this).removeClass('signin-form-check-clear');
                  }
                  if (check.error) {
                    return $(this).removeClass('signin-form-check-true').addClass('signin-form-check-false');
                  } else {
                    return $(this).removeClass('signin-form-check-false').addClass('signin-form-check-true');
                  }
                }
              }
            });
          });
        }
      }
    }
  };
  return $.fn.snRegistration = function(sn) {
    if (sn == null) {
      sn = {};
    }
    if (methods[sn]) {
      return methods[sn].apply(this, Array.prototype.slice.call(arguments, 1));
    } else {
      return methods.init.apply(this, arguments);
    }
  };
});

$(function() {
  var methods;

  methods = {
    init: function(options) {
      var def, sn;

      if (options == null) {
        options = {};
      }
      sn = $(this).data('sn');
      def = {};
      $.extend(true, def, options);
      if (typeof console !== "undefined" && console !== null) {
        console.log('signin: ' + 'init');
      }
      if (typeof console !== "undefined" && console !== null) {
        console.log('render: ', def);
      }
      $(this).snModels('primary', {
        view: 'signin.html'
      });
      $(this).snModels('side', {
        view: 'signinSide.html'
      });
      $(this).snTriggers('switch', 'side', sn.levels.two);
      $(this).snTriggers('switch', 'bar', sn.levels.one);
      $(this).snTriggers('links', 'side');
      $(this).snTriggers('hover', 'side');
      return $(this).snSignin('triggers', def);
    },
    help: function(options) {
      var def;

      if (options == null) {
        options = {};
      }
      if (typeof console !== "undefined" && console !== null) {
        console.log('signin: ' + 'help');
      }
      def = {};
      $.extend(true, def, options);
      $(this).snModels('primary', {
        view: 'signinBlockHelp.html',
        position: 'before'
      });
      return $(this).snSignin('triggers');
    },
    triggers: function(options) {
      var _this;

      if (options == null) {
        options = {};
      }
      _this = this;
      if (typeof console !== "undefined" && console !== null) {
        console.log('signin: ' + 'triggers');
      }
      $('.signin-input').on('focus', function() {
        if ($(this).val() === $(this).data('def-value') || $(this).val() === '') {
          $(this).removeClass('signin-input-blur');
          $(this).addClass('signin-input-focus');
          $(this).val('');
          return $(this).select();
        }
      });
      $('.signin-input').on('blur', function() {
        if ($(this).val() === $(this).data('def-value') || $(this).val() === '') {
          $(this).removeClass('signin-input-focus');
          $(this).addClass('signin-input-blur');
          return $(this).val($(this).data('def-value'));
        }
      });
      $('#signin-form-enter').on('submit', function(e) {
        e.preventDefault();
        return $(_this).snEnter('checkEnterForm');
      });
      $('#signin-button-enter').on('click', function(e) {
        e.preventDefault();
        return $(_this).snEnter('checkEnterForm');
      });
      $('#signin-form-reg').on('submit', function(e) {
        e.preventDefault();
        return $(_this).snRegistration('checkRegForm');
      });
      $('#signin-button-reg').on('click', function(e) {
        e.preventDefault();
        return $(_this).snRegistration('checkRegForm');
      });
      return $('.signin-type-reg').on('keyup', function() {
        var check, __this;

        __this = this;
        check = $(_this).snValidation('checkField', {
          type: $(this).data('check-type'),
          value: $(this).val(),
          caption: $(this).data('def-value')
        });
        return $('.signin-form-check').each(function() {
          if ($(this).data('check-type') === $(__this).data('check-type')) {
            if (check.error != null) {
              if ($(this).hasClass('signin-form-check-clear')) {
                $(this).removeClass('signin-form-check-clear');
              }
              if (check.error) {
                $(this).removeClass('signin-form-check-true');
                return $(this).addClass('signin-form-check-false');
              } else {
                $(this).removeClass('signin-form-check-false');
                return $(this).addClass('signin-form-check-true');
              }
            }
          }
        });
      });
    }
  };
  return $.fn.snSignin = function(sn) {
    if (sn == null) {
      sn = {};
    }
    if (methods[sn]) {
      return methods[sn].apply(this, Array.prototype.slice.call(arguments, 1));
    } else {
      return methods.init.apply(this, arguments);
    }
  };
});

$(function() {
  var methods;

  methods = {
    init: function(options) {
      var _this;

      if (options == null) {
        options = {};
      }
      _this = this;
      return $(this).on('click', function() {
        var sn;

        sn = $(_this).data('sn');
        if (sn.levels.one === 'users') {
          switch (sn.levels.two) {
            case 'signin':
              return $(_this).snSignin();
            case 'help':
              return $(_this).snSignin('help');
          }
        }
      });
    }
  };
  $.fn.snUsers = function(sn) {
    if (sn == null) {
      sn = {};
    }
    if (methods[sn]) {
      return methods[sn].apply(this, Array.prototype.slice.call(arguments, 1));
    } else {
      return methods.init.apply(this, arguments);
    }
  };
  return $('#sn').snUsers();
});

$(function() {
  var methods;

  methods = {
    init: function(options) {
      if (options == null) {
        options = {};
      }
      return $(this).snValidation('checkField', options);
    },
    checkField: function(options) {
      var def, value;

      if (options == null) {
        options = {};
      }
      def = {
        type: 'post',
        value: '',
        caption: '',
        error: true,
        start: 'В поле',
        exp: ''
      };
      $.extend(true, def, options);
      value = def.value.toString();
      if (typeof console !== "undefined" && console !== null) {
        console.log('validation: ' + def.type + ' - ' + value);
      }
      switch (def.type) {
        case 'firstname':
          if (value === '' || value === def.caption) {
            def.exp = 'ничего не указано!';
          } else {
            if (value.length < 3) {
              def.exp = 'слишком короткое значение!';
            } else {
              if (value.length > 28) {
                def.exp = 'слишком длинное значение!';
              } else {
                if (!value.match(/^([а-я\-\.]+)$/gi)) {
                  def.exp = 'некорректное значение!';
                } else {
                  def.error = false;
                }
              }
            }
          }
          break;
        case 'lastname':
          if (value === '' || value === def.caption) {
            def.exp = 'ничего не указано!';
          } else {
            if (value.length < 3) {
              def.exp = 'слишком короткое значение!';
            } else {
              if (value.length > 28) {
                def.exp = 'слишком длинное значение!';
              } else {
                if (!value.match(/^([а-я\-\.]+)$/gi)) {
                  def.exp = 'некорректное значение!';
                } else {
                  def.error = false;
                }
              }
            }
          }
          break;
        case 'patronymic':
          if (value === '' || value === def.caption) {
            def.exp = 'ничего не указано!';
          } else {
            if (value.length < 3) {
              def.exp = 'слишком короткое значение!';
            } else {
              if (value.length > 28) {
                def.exp = 'слишком длинное значение!';
              } else {
                if (!value.match(/^([а-я\-\.]+)$/gi)) {
                  def.exp = 'некорректное значение!';
                } else {
                  def.error = false;
                }
              }
            }
          }
          break;
        case 'email':
          if (value === '' || value === def.caption) {
            def.exp = 'ничего не указано!';
          } else {
            if (value.length < 3) {
              def.exp = 'слишком короткое значение!';
            } else {
              if (value.length > 28) {
                def.exp = 'слишком длинное значение!';
              } else {
                if (!value.match(/\b[\w\.-]+@[\w\.-]+\.\w{2,4}\b/gi)) {
                  def.exp = 'некорректное значение!';
                } else {
                  def.error = false;
                }
              }
            }
          }
          break;
        case 'phone':
          if (value === '' || value === def.caption) {
            def.exp = 'ничего не указано!';
          } else {
            if (value.length < 3) {
              def.exp = 'слишком короткое значение!';
            } else {
              if (value.length > 28) {
                def.exp = 'слишком длинное значение!';
              } else {
                if (!value.match(/\+?\d{1,3}(?:\s*\(\d+\)\s*)?(?:(?:\-\d{1,3})+\d|[\d\-]{4,}|(?:\s\d{1,3})+\d)/gi)) {
                  def.exp = 'некорректное значение!';
                } else {
                  def.error = false;
                }
              }
            }
          }
          break;
        case 'company':
          if (value === '' || value === def.caption) {
            def.exp = 'ничего не указано!';
          } else {
            if (value.length < 3) {
              def.exp = 'слишком короткое значение!';
            } else {
              if (value.length > 28) {
                def.exp = 'слишком длинное значение!';
              } else {
                if (!value.match(/^([а-яa-z0-9\-\.\,\'\'\<\>\ ]+)$/gi)) {
                  def.exp = 'некорректное значение!';
                } else {
                  def.error = false;
                }
              }
            }
          }
          break;
        case 'post':
          if (value === '' || value === def.caption) {
            def.exp = 'ничего не указано!';
          } else {
            if (value.length < 3) {
              def.exp = 'слишком короткое значение!';
            } else {
              if (value.length > 28) {
                def.exp = 'слишком длинное значение!';
              } else {
                if (!value.match(/^([а-яa-z0-9\-\.\,\'\'\ ]+)$/gi)) {
                  def.exp = 'некорректное значение!';
                } else {
                  def.error = false;
                }
              }
            }
          }
      }
      if (!def.error) {
        if (typeof console !== "undefined" && console !== null) {
          console.warn(def.exp);
        }
      }
      return def;
    }
  };
  return $.fn.snValidation = function(sn) {
    if (sn == null) {
      sn = {};
    }
    if (methods[sn]) {
      return methods[sn].apply(this, Array.prototype.slice.call(arguments, 1));
    } else {
      return methods.init.apply(this, arguments);
    }
  };
});
